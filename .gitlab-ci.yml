image: openjdk:13-jdk

before_script:
  - export APP_TYPE=services
  - export APP_NAME=activity-gradle
  - export APP_HEROKU_NAME_UAT=gambool-activity-service-uat
  - export APP_HEROKU_NAME=gambool-activity-service
  - export TARGET_DIR=activity-app/build/libs
  - export UAT_URL="https://gambool-activity-service-uat.herokuapp.com/services"
  - export PROD_URL="https://gambool-activity-service.herokuapp.com/services"
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - test
  - build
  - deploy

## Cache libraries in between jobs
cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

#################  build  ################

build:
  stage: build
  script:
    - ./gradlew assemble
  only:
    - master
  allow_failure: false
  artifacts:
    paths:
      - "build/libs/*-SNAPSHOT.jar"
      - "*/build/libs/*-SNAPSHOT.jar"
    when: always


#################   TEST ################
test:
    stage: test
    script:
      - ./gradlew check


#################  BUILD DOCKER IMAGE FOR UAT ENVIRONMENT  ################
deploy:uat:
  image: docker:stable
  stage: deploy
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --build-arg PROFILE="uat" -t registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:uat .
    - docker push registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:uat
    - docker login --username=$HEROKU_API_USER --password=$HEROKU_API_KEY registry.heroku.com
    - docker tag registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:uat registry.heroku.com/$APP_HEROKU_NAME_UAT/web
    - docker push registry.heroku.com/$APP_HEROKU_NAME_UAT/web
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $APP_HEROKU_NAME_UAT
  only:
    - master
  allow_failure: false


##################  FREEZE RELEASE VERSION AND UPDATE SNAPSHOT TO RELEASE VERSION  ################
release:prod:
  stage: build
  script:
    - git config user.email "raghu1213@hotmail.com"
    - git config user.name "Raghuveer Singh"
    - git checkout -f master
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 400 ~/.ssh/id_ed25519
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - ssh-add ~/.ssh/id_ed25519
    - ./gradlew :release:activity-app -Prelease.useAutomaticVersion=true
    - ./gradlew :release -Prelease.useAutomaticVersion=true
    - rm -f $TARGET_DIR/*SNAPSHOT.jar
  only:
    - master
  when: manual
  allow_failure: false
  artifacts:
    paths:
      - "*/target/*.jar"
      - "target/*.jar"
    when: always

##################  BUILD DOCKER IMAGE FOR PRODUCTION WITH RELEASE VERSIONS  ################
#docker:prod:
#  image: docker:stable
#  stage: docker
#  needs:
#    - job: build:prod
#      artifacts: true
#  services:
#    - docker:dind
#  script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#    - docker build -t registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:release .
#    - docker push registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:release
#  allow_failure: false
#  only:
#    - master
#
##################  DEPLOY RELEASE VERSION TO HEROKU PROD INSTANCE ################
#deploy:prod:
#  image: docker:stable
#  stage: deploy
#  needs:
#    - job: docker:prod
#  services:
#    - docker:dind
#  environment:
#    name: PRODUCTION
#    url: $PROD_URL
#  script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#    - docker pull registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:release
#    - docker login --username=$HEROKU_API_USER --password=$HEROKU_API_KEY registry.heroku.com
#    - docker tag registry.gitlab.com/xchange-gambool/$APP_TYPE/$APP_NAME:release registry.heroku.com/$APP_HEROKU_NAME/web
#    - docker push registry.heroku.com/$APP_HEROKU_NAME/web
#    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $APP_HEROKU_NAME
#  only:
#    - master
